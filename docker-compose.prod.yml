version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:5.0
    container_name: oilgasfinder-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: oilgasfinder
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - oilgasfinder-network
    ports:
      - "27017:27017"

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: oilgasfinder-backend
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      - MONGO_URL=mongodb://admin:${MONGO_ROOT_PASSWORD}@mongo:27017/oilgasfinder?authSource=admin
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=production
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - oilgasfinder-network
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: oilgasfinder-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - REACT_APP_BACKEND_URL=https://oilgasfinder.com/api
      - REACT_APP_ENVIRONMENT=production
      - REACT_APP_GA_TRACKING_ID=${GA_TRACKING_ID}
      - REACT_APP_HOTJAR_ID=${HOTJAR_ID}
    networks:
      - oilgasfinder-network
    ports:
      - "3000:3000"

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: oilgasfinder-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - oilgasfinder-network
    command: ["nginx", "-g", "daemon off;"]

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: oilgasfinder-certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d oilgasfinder.com -d www.oilgasfinder.com

volumes:
  mongo_data:
    driver: local

networks:
  oilgasfinder-network:
    driver: bridge